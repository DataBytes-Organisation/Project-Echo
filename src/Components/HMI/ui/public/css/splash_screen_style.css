:root {
    --background-rgb: 11 102 35;
    
    --jade-rgb: 0 168 107;
    --primary-rgb: var(--jade-rgb);

  }
  
  * {
    box-sizing: border-box;
  }
  
  /* When making changes depending on device type (like on Mobile), have a global standard, and then one that changes just the properties for the device type specified. */
  /* See '.screen > .screen-content > .screen-user > .name' to see what I mean. Like it only changes the font size while has the weight and position set in the global. */

  @viewport { /* Having this permits device size control */
    width: device-width;
    zoom: 1.0 ;
  } 
  
  body {
    height: 100vh;
    display: grid;
    place-items: center;
    background-color: rgb(var(--background-rgb));
    margin: 0rem;
    overflow: hidden;
  }
  
  .screen {
    width: 100vw;
    height: 100vh;
    display: flex;
    border: 3px solid rgb(var(--primary-rgb) / 80%);
    border-radius: 1rem;
    background-color: rgb(var(--primary-rgb) / 15%);
    overflow: hidden;
    position: absolute;
    z-index: 10;
    top: 0;
  }

  .change{
    opacity: 0;
    transition: all 1s;
  }
  
  .screen:after,
  .screen:before {
    content: "";
    height: 5px;
    position: absolute;
    z-index: 4;
    left: 50%;
    translate: -50% 0%;
    background-color: white;
  }
  
  .screen:before {
    width: 15%;
    top: 0rem;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
  }
  
  .screen:after {
    width: 25%;
    bottom: 0rem;
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
  }

  
  @keyframes pan-overlay {
    from {
      background-position: 0% 0%;
    }
    
    to {
      background-position: 0% -100%;
    }
  }
  
  .screen-overlay {    /* The below line enables hardware rendering, meaning that instead of the SW renderer being used to perform the abundance of paint commands, the HW renderer will be used instead, offering a massive speed increase */
	-webkit-transform: translate3d(0, 0, 0); /* Since HW rendering should be used only for proper 3D elements, appending the -webkit- prefix enables it only for WebKit devices, since the other browsers work just fine without it. */
    background: linear-gradient(
      rgb(var(--primary-rgb) / 0.15),
      rgb(var(--primary-rgb) / 0.15) 3px,
      transparent 3px,
      transparent 9px
    );
    background-size: 100% 9px;
    height: 100%;
    width: 100%;
    animation: pan-overlay 22s infinite linear;
    position: absolute;
    z-index: 2;
    left: 0px;
    top: 0px;
  }

  /* Controls the images in the panning background */
  @keyframes pan-image {  
    0% {
    background-position: 36% 42%;
    background-size: 200%;
    }

    20% {
    background-position: 30% 35%;
    background-size: 200%;
    }

    20.0001% { /* -- View 2 -- */
    background-position: 60% 85%;
    background-size: 500%;
    }

    40% {
    background-position: 49% 81%;
    background-size: 500%;
    }

    40.0001% { /* -- View 3 -- */
    background-position: 80% 42%;
    background-size: 300%;
    }

    60% {
    background-position: 84% 33%;
    background-size: 300%;
    }

    60.0001% { /* -- View 4 -- */
    background-position: 0% 0%;
    background-size: 300%;
    }

    80% {
    background-position: 15% 4%;
    background-size: 300%;
    }

    80.0001% { /* -- View 5 -- */
    background-position: 80% 10%;
    background-size: 300%;
    }

    100% {
    background-position: 72% 14%;
    background-size: 300%;
    }
  }
  

  @media only screen and (max-width: 980px) { /* Mobile vers. */
    @keyframes pan-image {  
      0% {
        background-position: 36% 42%;
        background-size: 500%;
      }

      20% {
        background-position: 30% 35%;
        background-size: 500%;
      }

      20.0001% { /* -- View 2 -- */
        background-position: 60% 85%;
        background-size: 500%;
      }

      40% {
        background-position: 49% 81%;
        background-size: 500%;
      }

      40.0001% { /* -- View 3 -- */
        background-position: 80% 42%;
        background-size: 400%;
      }

      60% {
        background-position: 84% 33%;
        background-size: 400%;
      }

      60.0001% { /* -- View 4 -- */
        background-position: 0% 0%;
        background-size: 400%;
      }

      80% {
        background-position: 15% 4%;
        background-size: 400%;
      }

      80.0001% { /* -- View 5 -- */
        background-position: 80% 10%;
        background-size: 500%;
      }

      100% {
        background-position: 72% 14%;
        background-size: 500%;
      }
    }
  }


  /* IMAGE: https://wallpaperaccess.com/magical-forest */
  .screen > .screen-image {
	-webkit-transform: translate3d(0, 0, 0); /* Using this translate command not only will enable the HW renderer, but it should also assist with the prevention of screen cutoff due to it rendering differently to the map section, fixing the other issue */
    background-image: url("./forest_1.jpg") ;
    height: 100%;
    width: 100%;
    position: absolute;
    z-index: 1;
    left: 0px;
    top: 0px;
    background-size: 300%;
    background-position: 0% 0%;
    filter: sepia(100%) hue-rotate(160deg);
    opacity: 0.6;
    animation: pan-image 15s linear infinite;
  }
  
  /* Controls the primary frame */
  .screen > .screen-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    flex-grow: 1;
    gap: 4rem;
    position: relative;
    z-index: 3;
    margin: 1rem;
    padding-bottom: 6rem;
    border: 1px solid rgb(var(--primary-rgb) / 50%);
    border-radius: 0.6rem;
  }


  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content {
      justify-content: center;
      padding-bottom: 2rem;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content {
      justify-content: center;
      gap: 2rem;
      padding-bottom: 1rem;
    }
  }

  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile exclusive (Portrait) */
    .screen > .screen-content > img {
      min-height: 40vw;
      min-width: 50vw;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile exclusive (Landscape) */
    .screen > .screen-content > img {
      min-height: 16vw;
      min-width: 20vw;
    }
  }
  
  .screen > .screen-content > .screen-icon {
    color: white;
    font-size: 4rem;
    text-shadow: 0px 0px 0.5rem white;
  }
  
  .screen > .screen-content > .screen-user{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    position: relative;
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content > .screen-user{
      gap: 0rem;
    }
  }
  
  .screen > .screen-content > .screen-user:before,
  .screen > .screen-content > .screen-user:after { /* Controls the green lines under logo */
    content: "";
    position: absolute;
    top: 0px;
    background-color: rgb(var(--primary-rgb));
    border-radius: 1rem;
    box-shadow: 0px 0px 8px 4px rgb(var(--primary-rgb) / 60%);
  }

  /* Controls the dark green line under logo */
  .screen > .screen-content > .screen-user:before {
    height: 2px;
    width: 50px;
    translate: -20px -1rem;
    opacity: 0.75;
  }

  
  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content > .screen-user:before {
      height: 5px;
      width: 38vw;
      translate: -12vw -1rem;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content > .screen-user:before {
      height: 5px;
      width: 14vw;
      translate: -4vw -1rem;
    }
  }
  
  /* Controls the bright green line under logo */
  .screen > .screen-content > .screen-user:after {
    height: 3px;
    width: 30px;
    translate: 26px calc(-1rem - 0.5px);
  }

  
  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content > .screen-user:after {
      height: 7px;
      width: 20vw;
      translate: 22vw calc(-1rem - 0.5px);
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content > .screen-user:after {
      height: 7px;
      width: 6vw;
      translate: 8vw calc(-1rem - 0.5px);
    }
  }

  .screen > .screen-content > .screen-user > :is(.name, .subtitle) { /* While the text animation did also use the SW renderer and cause some CPU usage, it shouldn't need the HW renderer for now... */
    font-family: "EarthOrbiterCondensed Local";
    color: white; 
    text-align: center;
    text-transform: uppercase; 
  }

  /* Controls the Project Echo text */
  .screen > .screen-content > .screen-user > .name {
    position: relative;
    font-size: 4.25rem;
    font-weight: 400;
  }


  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content > .screen-user > .name {
      font-size: 10vw;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content > .screen-user > .name {
      font-size: 5vw;
    }
  }

  /* Controls the list of buttons in portrait mode  */
  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content > .screen-user > ul {
      flex-direction: column;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .screen-content > .screen-user > ul {
      margin-bottom: 0;
    }
  }

  /* Scale the buttons for tablets in portrait */
  @media only screen and (max-width: 980px) and (min-width: 800px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .screen-content > .screen-user > ul > li {
      font-size: 5vw;
      margin-bottom: 0.5rem;
    }
  }

  /* For the login and register forms */
  @media only screen and (max-width: 980px) and (orientation: portrait) { /* Mobile vers. (Portrait) */
    .screen > .user-auth-form > .modal-content {
      position: absolute;
      left: 10vw;
      width: 80vw;
      min-width: 0px;
      margin: 0;
    }
  }

  @media only screen and (max-width: 930px) and (orientation: landscape) { /* Mobile vers. (Landscape) */
    .screen > .user-auth-form > .modal-content {
      position: absolute;
      top: -1vw;
      left: 10vw;
      width: 80vw;
      min-width: 0px;
      margin: 0;
      scale: 85%;
    }
  }

  @media only screen and (max-width: 980px) { /* Ensure on touch devices, the text says 'Touch to Start' */
    .screen > .screen-content > .screen-user > .subtitle{
      visibility: hidden;
    }
  }

  @media (pointer: coarse) or ((pointer: fine) and (any-pointer: coarse)) { /* --- */
    .screen > .screen-content > .screen-user > .subtitle{
      visibility: hidden;
    }
  }

  @media only screen and (max-width: 980px) and (orientation: portrait) { /* --- */
    .screen > .screen-content > .screen-user > .subtitle:after{
      position: relative;
      font-size: 8vw;
      font-weight: 750;      
      content: "Touch to start";
      display: block;
      visibility: visible;
    }
  }

  @media only screen and (max-width: 980px) and (orientation: landscape) { /* --- */
    .screen > .screen-content > .screen-user > .subtitle:after{
      position: relative;
      font-size: 3vw;
      font-weight: 750;      
      content: "Touch to start";
      display: block;
      visibility: visible;
    }
  }

  @media (pointer: coarse) or ((pointer: fine) and (any-pointer: coarse)) { /* --- */
    .screen > .screen-content > .screen-user > .subtitle:after{
      content: "Touch to start";
      display: block;
      visibility: visible;
    }
  }

  /* Controls the 2 dots on either side of text*/
  .screen > .screen-content > .screen-user > .name:before,
  .screen > .screen-content > .screen-user > .name:after {
    content: "";
    height: 4px;
    width: 4px;
    position: absolute;
    border: 2px solid white;
    border-radius: 2px;
  }


  @media only screen and (max-width: 980px) { /* Mobile vers. */
    .screen > .screen-content > .screen-user > .name:before,
    .screen > .screen-content > .screen-user > .name:after {
      border: 4px solid white;
      border-radius: 4px;
    }
  }
  
  .screen > .screen-content > .screen-user > .name:before {
    top: 45%;
    right: -1.5rem;
  }
  
  .screen > .screen-content > .screen-user > .name:after {
    top: 45%;
    left: -1.5rem;  
  }
  
  #blur {
    height: 100%;
    width: 100%;
    position: absolute;
    z-index: 2;
    backdrop-filter: blur(12vmax);
    background-color: rgb(var(--background-rgb));
  }

  .map_view{
    position: absolute;
    top: 0px;
    left:0px;
    width: 100vw;
    height: 100vh;
    z-index: 0;
  }
  
